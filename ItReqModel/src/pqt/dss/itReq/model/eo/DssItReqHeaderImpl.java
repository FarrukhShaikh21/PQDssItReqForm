package pqt.dss.itReq.model.eo;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.SQLException;

import java.sql.Types;

import javax.faces.context.ExternalContext;
import javax.faces.context.FacesContext;

import javax.servlet.http.HttpSession;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.DBTransaction;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Oct 07 10:46:42 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DssItReqHeaderImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        HdIdPk,
        ReqName,
        ReqDesignation,
        ReqDepartment,
        ReqDate,
        ReqForIdFk,
        ReqContact,
        VBranchCodeFk,
        EmpName,
        EmpCode,
        EmpDesignation,
        EmpDept,
        EmpStatusIdFk,
        LocTypeIdFk,
        HeadHr,
        HeadDept,
        HeadIt,
        RcvdBy,
        RcvdDate,
        ReqTypeIdFk,
        UserIdFk,
        EnterDate,
        LastUpdatedBy,
        LastUpdatedDate,
        ReqCompanyIdFk,
        EmpCompanyIdFk,
        LnIdFk,
        AgentNoFk,
        BranchStatus,
        DssStatus,
        BranchNotifIdFk,
        DssNotifIdFk,
        ItRequestDocNo,
        WorkflowNotificationId,
        WorkflowStatus,
        DssItReqLine;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int HDIDPK = AttributesEnum.HdIdPk.index();
    public static final int REQNAME = AttributesEnum.ReqName.index();
    public static final int REQDESIGNATION = AttributesEnum.ReqDesignation.index();
    public static final int REQDEPARTMENT = AttributesEnum.ReqDepartment.index();
    public static final int REQDATE = AttributesEnum.ReqDate.index();
    public static final int REQFORIDFK = AttributesEnum.ReqForIdFk.index();
    public static final int REQCONTACT = AttributesEnum.ReqContact.index();
    public static final int VBRANCHCODEFK = AttributesEnum.VBranchCodeFk.index();
    public static final int EMPNAME = AttributesEnum.EmpName.index();
    public static final int EMPCODE = AttributesEnum.EmpCode.index();
    public static final int EMPDESIGNATION = AttributesEnum.EmpDesignation.index();
    public static final int EMPDEPT = AttributesEnum.EmpDept.index();
    public static final int EMPSTATUSIDFK = AttributesEnum.EmpStatusIdFk.index();
    public static final int LOCTYPEIDFK = AttributesEnum.LocTypeIdFk.index();
    public static final int HEADHR = AttributesEnum.HeadHr.index();
    public static final int HEADDEPT = AttributesEnum.HeadDept.index();
    public static final int HEADIT = AttributesEnum.HeadIt.index();
    public static final int RCVDBY = AttributesEnum.RcvdBy.index();
    public static final int RCVDDATE = AttributesEnum.RcvdDate.index();
    public static final int REQTYPEIDFK = AttributesEnum.ReqTypeIdFk.index();
    public static final int USERIDFK = AttributesEnum.UserIdFk.index();
    public static final int ENTERDATE = AttributesEnum.EnterDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int REQCOMPANYIDFK = AttributesEnum.ReqCompanyIdFk.index();
    public static final int EMPCOMPANYIDFK = AttributesEnum.EmpCompanyIdFk.index();
    public static final int LNIDFK = AttributesEnum.LnIdFk.index();
    public static final int AGENTNOFK = AttributesEnum.AgentNoFk.index();
    public static final int BRANCHSTATUS = AttributesEnum.BranchStatus.index();
    public static final int DSSSTATUS = AttributesEnum.DssStatus.index();
    public static final int BRANCHNOTIFIDFK = AttributesEnum.BranchNotifIdFk.index();
    public static final int DSSNOTIFIDFK = AttributesEnum.DssNotifIdFk.index();
    public static final int ITREQUESTDOCNO = AttributesEnum.ItRequestDocNo.index();
    public static final int WORKFLOWNOTIFICATIONID = AttributesEnum.WorkflowNotificationId.index();
    public static final int WORKFLOWSTATUS = AttributesEnum.WorkflowStatus.index();
    public static final int DSSITREQLINE = AttributesEnum.DssItReqLine.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DssItReqHeaderImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("pqt.dss.itReq.model.eo.DssItReqHeader");
    }


    /**
     * Gets the attribute value for HdIdPk, using the alias name HdIdPk.
     * @return the value of HdIdPk
     */
    public Number getHdIdPk() {
        return (Number) getAttributeInternal(HDIDPK);
    }

    /**
     * Sets <code>value</code> as the attribute value for HdIdPk.
     * @param value value to set the HdIdPk
     */
    public void setHdIdPk(Number value) {
        setAttributeInternal(HDIDPK, value);
    }

    /**
     * Gets the attribute value for ReqName, using the alias name ReqName.
     * @return the value of ReqName
     */
    public String getReqName() {
        return (String) getAttributeInternal(REQNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReqName.
     * @param value value to set the ReqName
     */
    public void setReqName(String value) {
        setAttributeInternal(REQNAME, value);
    }

    /**
     * Gets the attribute value for ReqDesignation, using the alias name ReqDesignation.
     * @return the value of ReqDesignation
     */
    public String getReqDesignation() {
        return (String) getAttributeInternal(REQDESIGNATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReqDesignation.
     * @param value value to set the ReqDesignation
     */
    public void setReqDesignation(String value) {
        setAttributeInternal(REQDESIGNATION, value);
    }

    /**
     * Gets the attribute value for ReqDepartment, using the alias name ReqDepartment.
     * @return the value of ReqDepartment
     */
    public String getReqDepartment() {
        return (String) getAttributeInternal(REQDEPARTMENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReqDepartment.
     * @param value value to set the ReqDepartment
     */
    public void setReqDepartment(String value) {
        setAttributeInternal(REQDEPARTMENT, value);
    }

    /**
     * Gets the attribute value for ReqDate, using the alias name ReqDate.
     * @return the value of ReqDate
     */
    public Date getReqDate() {
        return (Date) getAttributeInternal(REQDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReqDate.
     * @param value value to set the ReqDate
     */
    public void setReqDate(Date value) {
        setAttributeInternal(REQDATE, value);
    }

    /**
     * Gets the attribute value for ReqForIdFk, using the alias name ReqForIdFk.
     * @return the value of ReqForIdFk
     */
    public Number getReqForIdFk() {
        return (Number) getAttributeInternal(REQFORIDFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReqForIdFk.
     * @param value value to set the ReqForIdFk
     */
    public void setReqForIdFk(Number value) {
        setAttributeInternal(REQFORIDFK, value);
    }

    /**
     * Gets the attribute value for ReqContact, using the alias name ReqContact.
     * @return the value of ReqContact
     */
    public String getReqContact() {
        return (String) getAttributeInternal(REQCONTACT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReqContact.
     * @param value value to set the ReqContact
     */
    public void setReqContact(String value) {
        setAttributeInternal(REQCONTACT, value);
    }

    /**
     * Gets the attribute value for VBranchCodeFk, using the alias name VBranchCodeFk.
     * @return the value of VBranchCodeFk
     */
    public String getVBranchCodeFk() {
        return (String) getAttributeInternal(VBRANCHCODEFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for VBranchCodeFk.
     * @param value value to set the VBranchCodeFk
     */
    public void setVBranchCodeFk(String value) {
        setAttributeInternal(VBRANCHCODEFK, value);
    }

    /**
     * Gets the attribute value for EmpName, using the alias name EmpName.
     * @return the value of EmpName
     */
    public String getEmpName() {
        return (String) getAttributeInternal(EMPNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmpName.
     * @param value value to set the EmpName
     */
    public void setEmpName(String value) {
        setAttributeInternal(EMPNAME, value);
    }

    /**
     * Gets the attribute value for EmpCode, using the alias name EmpCode.
     * @return the value of EmpCode
     */
    public String getEmpCode() {
        return (String) getAttributeInternal(EMPCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmpCode.
     * @param value value to set the EmpCode
     */
    public void setEmpCode(String value) {
        setAttributeInternal(EMPCODE, value);
    }

    /**
     * Gets the attribute value for EmpDesignation, using the alias name EmpDesignation.
     * @return the value of EmpDesignation
     */
    public String getEmpDesignation() {
        return (String) getAttributeInternal(EMPDESIGNATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmpDesignation.
     * @param value value to set the EmpDesignation
     */
    public void setEmpDesignation(String value) {
        setAttributeInternal(EMPDESIGNATION, value);
    }

    /**
     * Gets the attribute value for EmpDept, using the alias name EmpDept.
     * @return the value of EmpDept
     */
    public String getEmpDept() {
        return (String) getAttributeInternal(EMPDEPT);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmpDept.
     * @param value value to set the EmpDept
     */
    public void setEmpDept(String value) {
        setAttributeInternal(EMPDEPT, value);
    }

    /**
     * Gets the attribute value for EmpStatusIdFk, using the alias name EmpStatusIdFk.
     * @return the value of EmpStatusIdFk
     */
    public Number getEmpStatusIdFk() {
        return (Number) getAttributeInternal(EMPSTATUSIDFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmpStatusIdFk.
     * @param value value to set the EmpStatusIdFk
     */
    public void setEmpStatusIdFk(Number value) {
        setAttributeInternal(EMPSTATUSIDFK, value);
    }

    /**
     * Gets the attribute value for LocTypeIdFk, using the alias name LocTypeIdFk.
     * @return the value of LocTypeIdFk
     */
    public Number getLocTypeIdFk() {
        return (Number) getAttributeInternal(LOCTYPEIDFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for LocTypeIdFk.
     * @param value value to set the LocTypeIdFk
     */
    public void setLocTypeIdFk(Number value) {
        setAttributeInternal(LOCTYPEIDFK, value);
    }

    /**
     * Gets the attribute value for HeadHr, using the alias name HeadHr.
     * @return the value of HeadHr
     */
    public String getHeadHr() {
        return (String) getAttributeInternal(HEADHR);
    }

    /**
     * Sets <code>value</code> as the attribute value for HeadHr.
     * @param value value to set the HeadHr
     */
    public void setHeadHr(String value) {
        setAttributeInternal(HEADHR, value);
    }

    /**
     * Gets the attribute value for HeadDept, using the alias name HeadDept.
     * @return the value of HeadDept
     */
    public String getHeadDept() {
        return (String) getAttributeInternal(HEADDEPT);
    }

    /**
     * Sets <code>value</code> as the attribute value for HeadDept.
     * @param value value to set the HeadDept
     */
    public void setHeadDept(String value) {
        setAttributeInternal(HEADDEPT, value);
    }

    /**
     * Gets the attribute value for HeadIt, using the alias name HeadIt.
     * @return the value of HeadIt
     */
    public String getHeadIt() {
        return (String) getAttributeInternal(HEADIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for HeadIt.
     * @param value value to set the HeadIt
     */
    public void setHeadIt(String value) {
        setAttributeInternal(HEADIT, value);
    }

    /**
     * Gets the attribute value for RcvdBy, using the alias name RcvdBy.
     * @return the value of RcvdBy
     */
    public String getRcvdBy() {
        return (String) getAttributeInternal(RCVDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for RcvdBy.
     * @param value value to set the RcvdBy
     */
    public void setRcvdBy(String value) {
        setAttributeInternal(RCVDBY, value);
    }

    /**
     * Gets the attribute value for RcvdDate, using the alias name RcvdDate.
     * @return the value of RcvdDate
     */
    public Date getRcvdDate() {
        return (Date) getAttributeInternal(RCVDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RcvdDate.
     * @param value value to set the RcvdDate
     */
    public void setRcvdDate(Date value) {
        setAttributeInternal(RCVDDATE, value);
    }

    /**
     * Gets the attribute value for ReqTypeIdFk, using the alias name ReqTypeIdFk.
     * @return the value of ReqTypeIdFk
     */
    public Number getReqTypeIdFk() {
        return (Number) getAttributeInternal(REQTYPEIDFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReqTypeIdFk.
     * @param value value to set the ReqTypeIdFk
     */
    public void setReqTypeIdFk(Number value) {
        setAttributeInternal(REQTYPEIDFK, value);
    }

    /**
     * Gets the attribute value for UserIdFk, using the alias name UserIdFk.
     * @return the value of UserIdFk
     */
    public Number getUserIdFk() {
        return (Number) getAttributeInternal(USERIDFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for UserIdFk.
     * @param value value to set the UserIdFk
     */
    public void setUserIdFk(Number value) {
        setAttributeInternal(USERIDFK, value);
    }

    /**
     * Gets the attribute value for EnterDate, using the alias name EnterDate.
     * @return the value of EnterDate
     */
    public Date getEnterDate() {
        return (Date) getAttributeInternal(ENTERDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EnterDate.
     * @param value value to set the EnterDate
     */
    public void setEnterDate(Date value) {
        setAttributeInternal(ENTERDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate.
     * @return the value of LastUpdatedDate
     */
    public Date getLastUpdatedDate() {
        return (Date) getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedDate.
     * @param value value to set the LastUpdatedDate
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for ReqCompanyIdFk, using the alias name ReqCompanyIdFk.
     * @return the value of ReqCompanyIdFk
     */
    public Number getReqCompanyIdFk() {
        return (Number) getAttributeInternal(REQCOMPANYIDFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReqCompanyIdFk.
     * @param value value to set the ReqCompanyIdFk
     */
    public void setReqCompanyIdFk(Number value) {
        setAttributeInternal(REQCOMPANYIDFK, value);
    }

    /**
     * Gets the attribute value for EmpCompanyIdFk, using the alias name EmpCompanyIdFk.
     * @return the value of EmpCompanyIdFk
     */
    public Number getEmpCompanyIdFk() {
        return (Number) getAttributeInternal(EMPCOMPANYIDFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmpCompanyIdFk.
     * @param value value to set the EmpCompanyIdFk
     */
    public void setEmpCompanyIdFk(Number value) {
        setAttributeInternal(EMPCOMPANYIDFK, value);
    }

    /**
     * Gets the attribute value for LnIdFk, using the alias name LnIdFk.
     * @return the value of LnIdFk
     */
    public Number getLnIdFk() {
        return (Number) getAttributeInternal(LNIDFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for LnIdFk.
     * @param value value to set the LnIdFk
     */
    public void setLnIdFk(Number value) {
        setAttributeInternal(LNIDFK, value);
    }

    /**
     * Gets the attribute value for AgentNoFk, using the alias name AgentNoFk.
     * @return the value of AgentNoFk
     */
    public Number getAgentNoFk() {
        return (Number) getAttributeInternal(AGENTNOFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for AgentNoFk.
     * @param value value to set the AgentNoFk
     */
    public void setAgentNoFk(Number value) {
        setAttributeInternal(AGENTNOFK, value);
    }

    /**
     * Gets the attribute value for BranchStatus, using the alias name BranchStatus.
     * @return the value of BranchStatus
     */
    public String getBranchStatus() {
        return (String) getAttributeInternal(BRANCHSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for BranchStatus.
     * @param value value to set the BranchStatus
     */
    public void setBranchStatus(String value) {
        setAttributeInternal(BRANCHSTATUS, value);
    }

    /**
     * Gets the attribute value for DssStatus, using the alias name DssStatus.
     * @return the value of DssStatus
     */
    public String getDssStatus() {
        return (String) getAttributeInternal(DSSSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for DssStatus.
     * @param value value to set the DssStatus
     */
    public void setDssStatus(String value) {
        setAttributeInternal(DSSSTATUS, value);
    }

    /**
     * Gets the attribute value for BranchNotifIdFk, using the alias name BranchNotifIdFk.
     * @return the value of BranchNotifIdFk
     */
    public Number getBranchNotifIdFk() {
        return (Number) getAttributeInternal(BRANCHNOTIFIDFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for BranchNotifIdFk.
     * @param value value to set the BranchNotifIdFk
     */
    public void setBranchNotifIdFk(Number value) {
        setAttributeInternal(BRANCHNOTIFIDFK, value);
    }

    /**
     * Gets the attribute value for DssNotifIdFk, using the alias name DssNotifIdFk.
     * @return the value of DssNotifIdFk
     */
    public Number getDssNotifIdFk() {
        return (Number) getAttributeInternal(DSSNOTIFIDFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for DssNotifIdFk.
     * @param value value to set the DssNotifIdFk
     */
    public void setDssNotifIdFk(Number value) {
        setAttributeInternal(DSSNOTIFIDFK, value);
    }

    /**
     * Gets the attribute value for ItRequestDocNo, using the alias name ItRequestDocNo.
     * @return the value of ItRequestDocNo
     */
    public String getItRequestDocNo() {
        return (String) getAttributeInternal(ITREQUESTDOCNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItRequestDocNo.
     * @param value value to set the ItRequestDocNo
     */
    public void setItRequestDocNo(String value) {
        setAttributeInternal(ITREQUESTDOCNO, value);
    }

    /**
     * Gets the attribute value for WorkflowNotificationId, using the alias name WorkflowNotificationId.
     * @return the value of WorkflowNotificationId
     */
    public Number getWorkflowNotificationId() {
        return (Number) getAttributeInternal(WORKFLOWNOTIFICATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for WorkflowNotificationId.
     * @param value value to set the WorkflowNotificationId
     */
    public void setWorkflowNotificationId(Number value) {
        setAttributeInternal(WORKFLOWNOTIFICATIONID, value);
    }

    /**
     * Gets the attribute value for WorkflowStatus, using the alias name WorkflowStatus.
     * @return the value of WorkflowStatus
     */
    public String getWorkflowStatus() {
        return (String) getAttributeInternal(WORKFLOWSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for WorkflowStatus.
     * @param value value to set the WorkflowStatus
     */
    public void setWorkflowStatus(String value) {
        setAttributeInternal(WORKFLOWSTATUS, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getDssItReqLine() {
        return (RowIterator) getAttributeInternal(DSSITREQLINE);
    }


    /**
     * @param hdIdPk key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number hdIdPk) {
        return new Key(new Object[] { hdIdPk });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
                 super.create(attributeList);
                 Date currentDate = new Date();
                 setEnterDate((Date) currentDate.getCurrentDate());
                 setLastUpdatedDate((Date) currentDate.getCurrentDate());
                 SequenceImpl seq = new SequenceImpl("DSS_IT_REQ_HEADER_SEQ", getDBTransaction());
                 setHdIdPk(seq.getSequenceNumber());
                 
                 setBranchStatus("INCOMPLETE");
                 setDssStatus("INCOMPLETE");
                 
                 FacesContext fctx = FacesContext.getCurrentInstance();
                 ExternalContext ectx = fctx.getExternalContext();
                 HttpSession userSession = (HttpSession) ectx.getSession(false);
                 try {
                     setUserIdFk(new Number(userSession.getAttribute("pUserId")));
                     setLastUpdatedBy(new Number(userSession.getAttribute("pUserId")));
                 } catch (SQLException ex) {
                     setUserIdFk(new Number(0));
                     setLastUpdatedBy(new Number(0));
                 }
             
             }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
           if (operation == DML_INSERT) {
               DBTransaction txn = getDBTransaction();
               CallableStatement callableStatement =
                   txn.createCallableStatement("begin ? := dss_all_pkg.GET_IT_REQUEST_NUMBER; end;", DBTransaction.DEFAULT);
               try {
                   callableStatement.registerOutParameter(1, Types.VARCHAR);
                   callableStatement.executeUpdate();
                   String vItReqNumber = callableStatement.getString(1);
                   callableStatement.close();
                   setItRequestDocNo(vItReqNumber);
               } catch (SQLException sqle) {
                   try {
                       callableStatement.close();
                   } catch (SQLException f) {
                   }
               }
           }
           Date currentDate = new Date();
           if (operation == DML_UPDATE) {
               setLastUpdatedDate((Date) currentDate.getCurrentDate());
               FacesContext fctx = FacesContext.getCurrentInstance();
               ExternalContext ectx = fctx.getExternalContext();
               HttpSession userSession = (HttpSession) ectx.getSession(false);
               try {
//                   setUserIdFk(new Number(userSession.getAttribute("pUserId")));
                   setLastUpdatedBy(new Number(userSession.getAttribute("pUserId")));
               } catch (SQLException ex) {
                   setUserIdFk(new Number(0));
//                   setLastUpdatedBy(new Number(0));
               }
           }
           super.doDML(operation, e);
       }
       }


